# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Maven test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'adopt'
        cache: maven
    - name: Cache Maven packages
      uses: actions/cache@master
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Build with Maven
      run: mvn -B test --file pom.xml
        
  dependecy-check:
    needs: test
    name: OWASP Dependency Check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'adopt'
        cache: maven
    - name: Cache Maven packages
      uses: actions/cache@master
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Dependency Check
      uses: dependency-check/Dependency-Check_Action@main
      id: Depcheck
      env:
        JAVA_HOME: /opt/jdk
      with:
        project: 'loan-service'
        path: '.'
        format: 'HTML'
        out: 'reports' # this is the default, no need to specify unless you wish to override it
        # --failOnCVSS 7
        args: >
          --enableRetired        
    - name: Upload Test results
      uses: actions/upload-artifact@master
      with:
        name: Dependency Check Report
        path: ${{github.workspace}}/reports
        
  package:
    name: Maven package
    needs: dependecy-check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'adopt'
        cache: maven
    - name: Cache Maven packages
      uses: actions/cache@master
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Build with Maven
      run: mvn -B package -DskipTests --file pom.xml  
    - name: Upload JAR
      uses: actions/upload-artifact@master
      with:
        name: artifact
        path: target/*.jar
      
  # sonar:
  #   needs: build
  #   name: SonarCloud analysis
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Set up JDK 17
  #     uses: actions/setup-java@v3
  #     with:
  #       java-version: '17'
  #       distribution: 'adopt'
  #       cache: maven
  #   - name: Cache Maven packages
  #     uses: actions/cache@master
  #     with:
  #       path: ~/.m2
  #       key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
  #       restore-keys: ${{ runner.os }}-m2
  #   - name: Analyze with SonarCloud
  #     run: mvn -B verify sonar:sonar -Dsonar.projectKey=sofieneBK_Hands-on-ci-cd-for-springboot-apps -Dsonar.organization=sofienebk -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      
